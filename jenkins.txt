Jenkins is  CI tool that allows  continuous development ,test and deployment of newly created codes.

developer->sends code to ci server -> if it passes its send to tester else to developers

Features of Jenkins
it is a self contained Java-based prgm ready to run with packages for windows,mac os and unix like os
-easy installation
-easy configuration
-plugins
-extensible
-distributed

Jenkins Pipeline

Commit your code -> build -> test -> release -> Deploy/Deliver -> PRODUCTION

ARCHITECTURE

CI server -> build server(maven) -> test server  -> pdn server

yt vdo: Devops Journey
-----------------------
jenkins is an automation platform that allows you to buil,test and deploy s/w using pipelines

Jenkins Infra
1. Master server -> controls the pipelines and schedules build to agents
2. Agents ->  performs the build in their workspace
flow: a dev commits the code to github, the jenkins master becomes aware of this commit, and triggers the appropriate pipeline and distributes the build to one of the agents to run.

The agents are selected based on configured labels (via jenkins UI)

Agent types: 
1. Permanent Agents
2. Cloud Agents - docker,k8s, etc also ec2 fleet

2 main build jobs: 
1. freestyle build projects (easy and shell scripting)
2. pipelines(uses jenkins files written using groovy syntax
  they are broken into different stages like 
CLone, : cloning repo
Build, : genrates jar or some executable file
Test, 
Package, : packaged up
Deploy   : artifacts sent to registry

| Action                          | Example                                              |
| ------------------------------- | ---------------------------------------------------- |
| 🧱 **Build your project**       | Run commands like `mvn clean package` or `npm build` |
| 🧪 **Run tests**                | Execute `pytest`, `mvn test`, or `go test`           |
| 🐳 **Build Docker images**      | Run `docker build -t myapp .`                        |
| 📦 **Push artifacts**           | Push a `.jar` file or Docker image to a registry     |
| ☸️ **Deploy to Kubernetes**     | Run `kubectl apply -f deployment.yaml`               |
| 🔄 **Trigger other jobs**       | Tell Jenkins to start another pipeline               |
| 🧰 **Run custom shell scripts** | Any Linux/Windows command or script                  |
| 🧹 **Clean workspace**          | Delete old files or logs before build                |
| 📧 **Send notifications**       | Email or Slack notification on success/failure       |


Jenkins UI:
 
1. creating a freestyle project - job : my_first_job
worksapce contains the git repo files etc and also any files that we created in the build opyion in ui
the commands are actaully written in that build stage text box

2. Jenkins FileSystem

from ec2:
r/lib/jenkins$ 
ubuntu@ip-172-31-10-23:/var/lib/jenkins$ ls
config.xml                                      plugins
hudson.model.UpdateCenter.xml                   queue.xml
hudson.plugins.git.GitTool.xml                  queue.xml.bak
identity.key.enc                                secret.key
jenkins.install.InstallUtil.lastExecVersion     secret.key.not-so-secret
jenkins.install.UpgradeWizard.state             secrets
jenkins.model.JenkinsLocationConfiguration.xml  updates
jenkins.telemetry.Correlator.xml                userContent
jobs                                            users
logs                                            workspace
nodeMonitors.xml

cd workspace/
ubuntu@ip-172-31-10-23:/var/lib/jenkins/workspace$ ls
my_first_job
ubuntu@ip-172-31-10-23:/var/lib/jenkins/workspace$ cd my_first_job/
ubuntu@ip-172-31-10-23:/var/lib/jenkins/workspace/my_first_job$ ls
Dockerfile  README.md  backend  package-lock.json  package.json  public  src
ubuntu@ip-172-31-10-23:/var/lib/jenkins/workspace/my_first_job$ 

3. Writning Jenkins File:


pipeline {
    agent { 
        node {
            label 'jenkins-agent-goes-here'
            }
      }
    stages {
        stage('Build') {
            steps {
                echo "Building.."
                sh '''
                echo "doing build stuff.."
                '''
            }
        }
        stage('Test') {
            steps {
                echo "Testing.."
                sh '''
                echo "doing test stuff.."
                '''
            }
        }
        stage('Deliver') {
            steps {
                echo 'Deliver....'
                sh '''
                echo "doing delivery stuff.."
                '''
            }
        }
    }
}

